FORMAT: 1A
HOST: https://apis.uloz.to/

# Ulož.to API

Below you will find a current list of the available methods on our API.

# Global headers

Security headers used thoughout the API and their description.

## X-Auth-Token
This header is issued for every application. Each application should have exactly one, unique auth token. This is basically an **API key**.

## X-Checksum
Security checksum to sign your request with, assuring API that request was not tampered with.

<a name="user_token"></a>
## user_token
User token is used to prove to API that your application has access to user's account. User token is obtained by [validating login information](#sessions).


# Content types

The Ulož.to API currently supports both JSON and XML. JSON is prefered and you can choose between xml and json using `Accept` header.

# Group Root

## API Root [/]

This resource does not have any attributes. Instead it offers the initial
API affordances in the form of the links in the JSON body.

It is recommend to follow the “url” link values,
[Link](https://tools.ietf.org/html/rfc5988) or Location headers where
applicable to retrieve resources. Instead of constructing your own URLs,
to keep your client decoupled from implementation details.


## Retrieve entry points [GET]

+ Request

    + Header

            X-Auth-Token: 3284hedgf237ruewhfvgi2378

+ Response 200 (application/json)

    + Attributes
        + search_url: `/search/v1` (string, required)
        + session_url: `/session/v1` (string, required)
        + userinfo_url: `/user/v1` (string, required)
        + app_version_url: `/app-version/v1` (string, required)
        + files_url: `/v1/files` (string, required)
        + userfolders_list_url: `/v1/user/{user_token}/folders` (string, required)
        + `userfolders_url`: `/v1/user/{user_token}/folders/{folder_id}` (string, required)
        + `bulk_url`: `/v1/bulk` {string, required}

+ Response 401 (application/json)

    Invalid X-Auth-Token provided , could not authorize your application.

    + Header

            WWW-Authenticate: X-Auth-Token

    + Attributes (Error response)
        + message: Invalid authorization token.

# Group Bulk

## Bulk commands [/v1/bulk]

### Execute bulk commands [PUT]

Execute multiple commands using single http request. Get all results in the single http response.

+ Request (application/json)

    + Header

            X-Auth-Token: 3284hedgf237ruewhfvgi2378

    + Attributes (object)
        + bulk_header (array[Bulk http header item])
        + bulk (array[Bulk request entry])

+ Response 200 (application/json)

    All bulk commands were executed, their return values are present in the response in the order they were

    + Attributes
        + responses (array[Bulk response entry])

+ Response 500 (application/json)

    Fatal error, unable to resume operations. Bulk commands were not executed.

    + Attributes (Error response)
        + message: `Fatal error, unable to execute bulk batch.` (string, optional)


# Group Sessions
<a name="sessions"></a>

## Authentication [/session/v1]

### Authenticate user [PUT]

This endpoint is used to generate a valid [user_token](#user_token). [user_token](#user_token) is later used to identify a user.

+ Request (application/json)

    + Header

            X-Auth-Token: 3284hedgf237ruewhfvgi2378

    + Attributes
        + login: medvidek (string, required) - User login
        + password: 123456 (string, required) - User password
        + device_id: 23489efgih2841 (string, optional) - Android Device ID for example. Maximum 40 characters length.

+ Response 201 (application/json)

    [user_token](#user_token) created.

    + Headers

            ETag: "asdiu328reewhfikw" - [user_token](#user_token)

    + Attributes (Successful response)
        + token_id: asdiu328reewhfikw (string, required)

+ Response 401 (application/json)

    Invalid X-Auth-Token provided, could not authorize your application.

    + Header

            WWW-Authenticate: X-Auth-Token

    + Attributes (Error response)
        + message: Invalid authorization token.


+ Response 412 (application/json)

    Unable to create user [user_token](#user_token).

    + Attributes (Error response)
        + token: null (string, nullable, required)
        + message: Wrong password or invalid username


+ Response 429 (application/json)

    + Attributes (Error response)
        + token: null (string, nullable, required)
        + message: Too many requests. Please slow down a little and try again later.


## User sessions [/session/v1/{user_token}]

+ Parameters

    + user_token: asdiu328reewhfikw (string, optional) - Identifier of session


### Delete user session [DELETE]

Logouts an user.

+ Request

    + Header

            X-Auth-Token: 3284hedgf237ruewhfvgi2378

+ Response 200 (application/json)

    + Headers

            ETag: "asdiu328reewhfikw"

    + Attributes (Successful response)

+ Response 401 (application/json)

    Invalid X-Auth-Token provided , could not authorize your application.

    + Header

            WWW-Authenticate: X-Auth-Token

    + Attributes (Error response)
        + message: Invalid authorization token.


# Group User

## Basic user info [/user/v1/{user_token}]

+ Parameters
    + user_token: asdiu328reewhfikw (string, optional) - obtained by authentication

### Get user information [GET]

Get the basic information for an account.

+ Request

    + Header

            X-Auth-Token: 3284hedgf237ruewhfvgi2378

+ Response 200 (application/json)

    Basic user info. Credit amount is measured in kilobytes.

    + Attributes (Successful response)
        + user_id: 666 (number, required)
        + login: medvidek (string, required)
        + credit: 413967 (string, required)

+ Response 401 (application/json)

    Invalid X-Auth-Token provided , could not authorize your application.

    + Header

            WWW-Authenticate: X-Auth-Token

    + Attributes (Error response)
        + message: Invalid authorization token.


## User's folders [/v1/user/{user_token}/folders/{folder_ids}{?tree,format}]

+ Parameters
    + `user_token`: "asdiu328reewhfikw" (string) - Identification of an user, obtained through /session entry point
    + `tree`: false (boolean, optional) - If set to `true`, folder entities will be returned in the tree-like structure, with each folder entity containing its children in the `children` field.
    + `format`: info (enum, optional) - Format of the response. For correct response format, check one of two possible 200 OK results below.
        + Default: info
        + Members
            + info
            + size
    + `folder_ids`: 4,6,29 (array[number], optional) - List of comma-separated folder ids. If not present, we are returning all folders. Cannot be combined with `tree` argument.


### Get folders [GET]

List of user's folders. Folders are always ordered by name.

+ Request

    + Header

            X-Auth-Token: 3284hedgf237ruewhfvgi2378

+ Response 200 (application/json)
Response for parameter format = `info`
    + Attributes (object)
        + items (array[Folder entity info])

+ Response 200 (application/json)
Response for parameter format = `size`
    + Attributes (object)
        + items (array[Folder entity size])

+ Response 400 (application/json)

    Invalid parameter value

    + Attributes (Error response)
        + message: Invalid tree parameter value.


+ Response 401 (application/json)

    Invalid X-Auth-Token provided , could not authorize your application.

    + Header

            WWW-Authenticate: X-Auth-Token

    + Attributes (Error response)
        + message: Invalid authorization token.


### Create new folder [PUT /v1/user/{user_token}/folders]

Validation error messages are returned in language set by `Accept-Language` header.

Creates new folder for current user.

+ Request (application/json)

    + Header

            X-Auth-Token: 3284hedgf237ruewhfvgi2378

    + Attributes
        + name: Cute folder name (string, required)
        + visibility (enum[string], nullable, optional)
            + Default: public
            + Members
                + public
                + private
        + password: null (string, nullable, optional) - no password when null
        + parent_folder_id: 100 (number, optional) - 0 for root folder

+ Response 201 (application/json)

    + Attributes (Folder entity info)

+ Response 400 (application/json)

    `Unable to create folder - wrong data submitted.`

    + Body

            {
                "result": "error",
                "message": "Unable to create folder.",
                "errors": [
                    {
                        "data_element": "name",
                        "message": "Name cannot be empty."
                    },
                    {
                        "data_element": "name",
                        "message": "Name is too long."
                    },
                    {
                        "data_element": "visibility",
                        "message": "Allowed values are public and private."
                    },
                    {
                        "data_element": "parent_folder_id",
                        "message": "Parent folder does not exist."
                    },
                    {
                        "data_element": "parent_folder_id",
                        "message": "You must be owner of parent folder."
                    }
                ]
            }

+ Response 401 (application/json)

    Invalid X-Auth-Token provided , could not authorize your application.

    + Header

            WWW-Authenticate: X-Auth-Token

    + Attributes (Error response)
        + message: Invalid authorization token.

+ Response 409 (application/json)

    Folder with this name already exists. Use different name.

    + Attributes (Error response)
        + message: This folder already exists

## Files in user's folder [/v1/user/{user_token}/folder/{folder_id}{?page,limit,sort,search_query,filetype,include_password_protected}]

+ Parameters
    + user_token: asdiu328reewhfikw (required, string) - User token of folder owner
    + page: 1 (number, optional) - Fetch specific page number
        Default: 1
    + limit: 20 (number, optional) - Limit the result set to <limit> items
        Default: 20
    + sort: name (string, optional) - Sorting, one of [name; -name; created; -created; size; -size; extension; -extension]. This option may not be used without specifying `query`.
        Default: name
    + `search_query` (string, optional) - Return only files with names containing search_query
    + filetype: video (string, optional) - Filter found files, value might be one of [video; audio; image; document]. If empty, search will return all filetypes.
    + `include_password_protected`: false (boolean, optional) - If set to true, will include password protected files in the search results.
        Default: true


### Files in folder [GET]

Get all files in specific folder.

+ Request

    + Header

            X-Auth-Token: 3284hedgf237ruewhfvgi2378

+ Response 200 (application/json)

    + Headers

            Link: </v1/user/{user_token}/folder/{folder_id}?page=1>;rel=self,</v1/user/{user_token}/folder/{folder_id}?page=2>;rel=next

    + Attributes
        + metadata (object)
            + page: 1
            + limit: 20
            + page_count: 12
            + items_count: 236
        + items (array[Private file entity])

# Group HTML Captcha v2

## HTML captcha [/v2/captcha/{captcha_token}/]

+ Parameters
    + captcha_token: `2c628b89-a989-4abc-9c31-9d7525bdf2b1:1` (required) - Token you received as denied response at original endpoint.

### Get captcha status [GET]

+ Response 200 (application/json)

    + Attributes
        + verified: false (required, boolean)

## HTML captcha URL [/v2/captcha/{captcha_token}/url]

+ Parameters
    + captcha_token: `2c628b89-a989-4abc-9c31-9d7525bdf2b1:1` (required) - Token you received as denied response at original endpoint.

### Create captcha URL [POST]

+ Request (application/json)

    + Attributes
        + success_url: `myapp://example.com/success` (optional) - User will be redirected to this URL after successful captcha validation.
        + cancel_url: `myapp://example.com/cancel` (optional) - User will be redirected to this URL if he cancels captcha validation.
        + error_url: `myapp://example.com/error` (optional) - User will be redirected to this URL in case of error (e.g. expired token).

+ Response 201 (application/json)

    + Attributes
        + url: `https://auth.uloz.to/html/captcha?captcha_token=2c628b89-a989-4abc-9c31-9d7525bdf2b1:1` (string)

+ Response 400 (application/json)

    `Given success_url isn't permitted`

    + Body

            {
                "result": "error",
                "message": "Invalid `success_url`: myapp://example.com"
            }

# Group Captcha v1

## Captcha [/v1/captcha/{?user_token}]

+ Parameters
    + user_token: asdiu328reewhfikw (string, required) - To get captcha, you need to identify yourself with this token.

### Create captcha [POST]

+ Response 201 (application/json)
    + Attributes (Captcha entity)

## Validate captcha [/v1/captcha/{id}/validate{?user_token}]

+ Parameters
    + id: d41d8cd98f00b204e9800998ecf8427e (string, required) - Captcha id from Create captcha endpoint
    + user_token: asdiu328reewhfikw (string, optional) - To validate captcha input, you need to identify yourself with this token.

### Validate captcha input [POST]

+ Request (application/json)
    + Attributes (Validate captcha entity)

+ Response 201 (application/json)
    + Attributes (Captcha token entity)

+ Response 403 (application/json)
    + Attributes (Error response)
        + message: Invalid input for captcha.

+ Response 422 (application/json)
    + Attributes (Error response)
        + message: Invalid parameters for captcha input.

# Group File

Validation error messages are returned in language set by `Accept-Language` header.

**There are different types of file - e.g. public, private. Different files requires different auth parameters.**

**All read parameters (update may have different parameters) are described in Get file endpoint only and works in all other read file endpoints (parameters, comments...).**

## Detail [/v1/files/{slug}{?password,user_token,upload_token}]

+ Parameters
    + slug: !8DzBBNAuS (string, required) - Slug from file listing API calls. Slug may change when file is renamed. Old slug will keep working, but new slug will be issued by API calls.
    + user_token: asdiu328reewhfikw (string, optional) - To access user's private file, you need to identify yourself with this token
    + upload_token: `2c628b89-a989-4abc-9c31-9d7525bdf2b1:1` (string, optional) - To write access to anonymous file in upload process, you need to use upload token. Also you need to use upload token to view the file as anonymous user.
    + password: 123macko (string, optional) - To access password protected file, you need to provide the file's password (password is not necessary to access own files, password does not allow writing file not my own)

### Get file [GET]
<a name="file"></a>

Returns everything we know about file.

+ Request

    + Header

            X-Auth-Token: 3284hedgf237ruewhfvgi2378

+ Response 200 (application/json)
    + Attributes (Public file entity)

+ Response 401 (application/json)

    Invalid X-Auth-Token provided , could not authorize your application.

    + Header

            WWW-Authenticate: X-Auth-Token

    + Attributes (Error response)
        + message: Invalid authorization token.

### Update file [PATCH]

Update file properties.
All properties are optional, every property present in request body will be changed.
Property set to `null` will be set to default value where possible.
Updating any property may affect other properties (e.g., changing `name` may change `url` and `realm`).

+ Request (application/json)

    + Header

            X-Auth-Token: 3284hedgf237ruewhfvgi2378

    + Attributes (Update file entity)

+ Response 200 (application/json)
    + Attributes (Public file entity)

+ Response 401 (application/json)

    Invalid X-Auth-Token provided , could not authorize your application.

    + Header

            WWW-Authenticate: X-Auth-Token

    + Attributes (Error response)
        + message: Invalid authorization token.

+ Response 400 (application/json)

    `Unable to update file - wrong data submitted.`

    + Body

            {
                "result": "error",
                "message": "Unable to update file.",
                "errors": [
                    {
                        "data_element": "name",
                        "message": "Name cannot be empty."
                    },
                    {
                        "data_element": "folder_id",
                        "message": "File owner must own the folder too."
                    },
                    {
                        "data_element": "visibility",
                        "message": "Public visibility is forbidden for this file."
                    }
                ]
            }

### Delete file [DELETE]

Delete your file.

+ Request

    + Header

            X-Auth-Token: 3284hedgf237ruewhfvgi2378

+ Response 204 (application/json)

    Delete successfull

    + Header

+ Response 401 (application/json)

    Invalid X-Auth-Token provided , could not authorize your application.

    + Header

            WWW-Authenticate: X-Auth-Token

    + Attributes (Error response)
        + message: Invalid authorization token.

## Parameters  [/v2/files/{slug}/parameters{?password,user_token,upload_token}]

### Get parameters [GET]

Returns additional information about multimedia files and archives.

+ Request

    + Header

            X-Auth-Token: 3284hedgf237ruewhfvgi2378

+ Response 200 (application/json)
    + Attributes (File parameters entity)

+ Response 401 (application/json)

    Invalid X-Auth-Token provided , could not authorize your application.

    + Header

            WWW-Authenticate: X-Auth-Token

    + Attributes (Error response)
        + message: Invalid authorization token.

## Download link [/v2/files/{slug}/download/{type}{?captcha_token,user_token,password,device_id}]

API currently supports free downloads only. VIP downloading will be implemented in the future. For permissions error responses see [file endpoint](#file).

## Free download required parameters
- **captcha_token**
- **user_token**
- **device_id**

+ Parameters
    + type (enum[string], required)
        + Members
            + free
    + slug: !northys (string, required)
    + user_token: asdiu328reewhfikw (string, optional) - To access user's private file, you need to identify yourself with this token
    + captcha_token: `2c628b89-a989-4abc-9c31-9d7525bdf2b1:1` (string, optional) - Token you received after validation of captcha input. Needed
    + password: my_password (string, optional) - To download password protected file.
    + device_id: 23489efgih2841 (string, optional) - Android Device ID for example. Maximum 40 characters length.

### Create download link [POST]

+ Response 201 (application/json)
    + Attributes (Download link entity)


## Favorite [/v2/files/{slug}/favorite{?user_token,password}]

New file is created when you favorite an existing file. The new file is returned as body response.

### Favorite file [POST]

+ Response 201 (application/json)
    + Headers

            Location: https://apis.uloz.to/!slug/favorited-file

    + Attributes (Public file entity)

+ Response 409 (application/json)

    When file is in favorite folder already.

    + Attributes (Error response)
        + message: File is already in favourites.

## Comments [/v2/files/{slug}/comments{?page,limit}]

+ Parameters
    + slug: !8DzBBNAuS (string, required) - Slug from file listing API calls. Slug may change when file is renamed. Old slug will keep working, but new slug will be issued by API calls.
    + page: 1 (number, optional) - Paging parameter
        Default: 1
    + limit: 20 (number, optional) - Paging parameter - size of returned page
        Default: 20

### Get comments list [GET]

Fetch list of file comments


+ Request

    + Headers

            X-Auth-Token: 3284hedgf237ruewhfvgi2378
            X-Checksum: 93bd5933f956598617c73c2864b00c00
            X-Timestamp: 1436957691

+ Response 200 (application/json)

    + Headers

            Link: </v1/files/{slug}/comments?page=3>;rel=next,</v1/files/{slug}/comments?page=1>;rel=previous,</v1/files/{slug}/comments?page=12>;rel=last

    + Attributes
        + metadata (object)
            + page: 1
            + limit: 20
            + page_count: 12
            + items_count: 236
        + items (array[User comment])

+ Response 401 (application/json)

    Invalid X-Auth-Token provided , could not authorize your application.

    + Header

            WWW-Authenticate: X-Auth-Token

    + Attributes (Error response)
        + message: Invalid authorization token.

+ Response 404 (application/json)

    Requested response does not exist. Accessing nonexistent page.

    + Attributes (Error response)
        + message: Requested page index is out of range.
        + page_count: 1 (number, required)
        + items_count: 8 (number, required)

# Group Upload

## Upload batch commit [/v1/upload/batch/{batch_uuid}/commit{?user_token,visibility,is_searchable}]

Commits upload batch. Changes visibility of files being uploaded.

+ Parameters
    + batch_uuid: d5ec97a3-cb15-46d3-8f5f-5125378a22c9 (string, required) - Upload batch unique ID
    + visibility (enum) - Either `public` or `private`
    + is_searchable: true (boolean, required) - Sets sets this searchable flag to all files currently in batch
    + user_token: asdiu328reewhfikw (string, optional) - To access user's upload batch, you need to identify yourself with his token

### Upload batch commit [PUT]

+ Request

    + Header

            X-Auth-Token: 3284hedgf237ruewhfvgi2378

+ Response 200 (application/json)

    Commit succesfull

    + Attributes (object)
        + after_upload_url: /sem/nahrano/d5ec97a3-cb15-46d3-8f5f-5125378a22c9 (string, required)
        + files (array[Upload file entity])

+ Response 400 (application/json)

    Input data invalid

    + Attributes (Error response)
        + message: Unknown data received.

+ Response 401 (application/json)

    Invalid X-Auth-Token provided , could not authorize your application.

    + Header

            WWW-Authenticate: X-Auth-Token

    + Attributes (Error response)
        + message: Invalid authorization token.

+ Response 403 (application/json)

    Batch is not valid for edit.

    + Attributes (Error response)
        + message: Batch is not valid for edit.

+ Response 404 (application/json)

    Unknown batch_uuid

    + Attributes (Error response)
        + message: Unknown batch uuid.


## Files in upload batch [/v1/upload/batch/{batch_uuid}/files{?user_token}]

Determines files in batch.

+ Parameters
    + batch_uuid: d5ec97a3-cb15-46d3-8f5f-5125378a22c9 (string, required) - Upload batch unique ID
    + user_token: asdiu328reewhfikw (string, optional) - To access user's upload batch, you need to identify yourself with his token

### Files in upload batch [PUT]

Expects list of files that should be present in upload batch. Unknown files will cause error. Every file not included in given list will be deleted.

+ Request

    + Header

            X-Auth-Token: 3284hedgf237ruewhfvgi2378

    + Attributes (object)
        + batch_files_ids (array[number], required) - list of files IDs in upload batch (i.e., ordinal number of file in upload batch)

+ Response 204 (application/json)

    Batch contains exactly given files. No modification needed.

    + Header

+ Response 200 (application/json)

    Superfluous files in batch were deleted.

    + Attributes (object)
        + deleted_batch_files_ids (array[number])

+ Response 422 (application/json)

    Some of given files are unknown. No modification was done.

    + Body

            {
                "result": "error",
                "message": "Unknown batch_files_ids found.",
                "errors": {
                    "unknown_batch_files_ids": [1, 2, 3]
                }
            }

+ Response 401 (application/json)

    + Attributes (Error response)
        + message: Invalid authorization token.

+ Response 404 (application/json)

    + Attributes (Error response)
        + message: Unknown batch uuid.


## Upload file progress [/v1/upload/batch/{batch_uuid}/file/{batch_file_id}]

DEPRECATED - Returns upload progress of file.

+ Parameters
    + batch_uuid: d5ec97a3-cb15-46d3-8f5f-5125378a22c9 (string, required) - Upload batch unique ID
    + batch_file_id: 10 (number, required) - File ID in upload batch (i.e., ordinal number of file in upload batch)

### Get file upload status [GET]

+ Request

    + Header

            X-Auth-Token: 3284hedgf237ruewhfvgi2378

+ Response 200 (application/json)

    + Attributes
        + status: done (enum[string], required) - Always done
            + Members
                + done
        + size: 54646546 (number, required) - File size, available only when status is done
        + slug: null (string, optional) - File slug, available only when status is done

+ Response 401 (application/json)

    Invalid X-Auth-Token provided , could not authorize your application.

    + Header

            WWW-Authenticate: X-Auth-Token

    + Attributes (Error response)
        + message: Invalid authorization token.

+ Response 404 (application/json)

    Unknown batch_uuid or batch_file_id or upload still in progress

    + Attributes (Error response)
        + message: batch_uuid or batch_file_id not found

## Upload link [/v1/upload/link]

This entrypoint is not protected by X-Checksum security signature. You do not have to send X-Checksum header.

### Fetch new upload link [POST]

+ Request
    + Headers

            X-Auth-Token: 3284hedgf237ruewhfvgi2378 (string, required)
            X-User-Token: 83jhf94l2jk34 (string, optional) - Authorize `user`, see [User session]

    + Attributes
        + realm: ulozto (enum, required) - Source site requesting the upload
            + Members
                + ulozto
                + pornfile
        + user: `mackousko` (string, optional) - Login name of uploading user - you also have to authorize the user by providing X-Auth-Token in the header
            + Default: null
        + `captcha_token`: 4j45je8ckrd38 (string, optional) - Provide this value ONLY if you had to be validated by captcha. For more information see Response 401
            + Default: null
        + `batch_id`: `d5ec97a3-cb15-46d3-8f5f-5125378a22c9` (string, optional) - If provided, file will be uploaded as part of provided batch. If null, new batch will be created and its batch_id returned.
        + `force_captcha`: true (boolean, optional) - By setting this flag you can force the endpoint to require the captcha validation. This flag is meant only for debug purposes as there is no meaningful reason

+ Response 200
    + Attributes
        + `upload_url` (string, required) - The url where the upload should POST the file. It is possible to remove the GET url parameters and send them as part of POST.
        + `batch_id`: `d5ec97a3-cb15-46d3-8f5f-5125378a22c9` (string, required) - The id of batch the file will be uploaded to. You should provide this batch to following upload calls, so that all the files owned by the same user are uploaded in the single batch.
        + `validity_interval`: 172800 (number, required) - Time interval in seconds until the upload link expires
        + `valid_until`: `2018-06-11T16:43:44+02:00` (string, required) - Time when the upload link expires

+ Response 401

        We have to head to captcha endpoint and complete the captcha with the `captcha_token` given to us here. After completing the captcha we can head back to this endpoint and provide this `captcha_token` to prove we are authorized to upload.

    + Headers

                WWW-Authenticate: X-Captcha-Validation

    + Attributes
        + `captcha_token`: aw42de2gt4f (string, required)


# Group Search

## Search [/search/v1/{query}{?page,limit,user_token,sort,filetype,duration,quality,include_password_protected,streaming}]

+ Parameters
    + query: zahradniceni rostliny (string, optional) - Searched query. If query is empty, search will return random files in random order.
    + user_token: asdiu328reewhfikw (string, required) - Perform search as a frontend user (instead of anonymous search)
    + page: 1 (number, optional) - Fetch specific page number
        Default: 1
    + limit: 20 (number, optional) - Limit the result set to <limit> items
        Default: 20
    + sort: weight (enum, optional) - Sorting, one of [`weight`, `created`, `ratings`, `size`, `-size`]. This option may not be used without specifying `query`.
        Default: weight
    + filetype: video (string, optional) - Filter found files, value might be one of (`video`, `audio`, `image`, `document`, `archive`). If empty, search will return all filetypes.
    + duration (enum[string], optional) - filter by duration. available only for music and videos.
        + Default: ''
        + Members
            + ''
            + short
            + middle
            + long
    + quality (enum[string], optional) - filter by quality. available for music, videos and images.
        + Default: ''
        + Members
            + ''
            + high
            + middle
            + low
    + streaming (enum[string], optional) - filter streaming type. available only for videos
        + Default: ''
        + Members
            + ''
            + live
            + stream
            + download
    + include_password_protected: false (boolean, optional) - If set to `true`, will include password protected files in the search results.

### Get search result [GET]

Perform search request. Response consists of two parts
+ metadata with informaton about the search (time, page, items count etc.)
+ list of search items (list of entries, one for each file)

+ Request

    + Headers

            X-Auth-Token: 3284hedgf237ruewhfvgi2378
            X-Checksum: 93bd5933f956598617c73c2864b00c00
            X-Timestamp: 1436957691

+ Response 200 (application/json)

    + Headers

            Link: </search/zahradniceni rostliny>;rel=self,</search/zahradniceni rostliny>;rel=next,</search/zahradniceni rostliny>;rel=previous

    + Attributes (Successful response)
        + metadata (object)
            + query: zahradniceni rostliny
            + displayed_query: zahradniceni rostliny
            + run_at: `2017-12-11T14:46:31+01:00`
            + page: 1
            + limit: 20
            + page_count: 12
            + items_count: 236
        + items (object)
            + exact (array[Public file entity])
            + partial (array[Public file entity])

+ Response 401 (application/json)

    Invalid X-Auth-Token provided , could not authorize your application.

    + Header

            WWW-Authenticate: X-Auth-Token

    + Attributes (Error response)
        + message: Invalid authorization token.

+ Response 404 (application/json)

    Requested response does not exist. Maybe you are trying to access page parameter beyond the existing results?

    + Attributes (Error response)
        + message: Requested page index is out of range for given query.
        + page_count: 1 (number, required)
        + items_count: 8 (number, required)

+ Response 412 (application/json)

    Wrong request parameter. For e.g. limit less than 1 or more than 100, unsupported filter etc.

    + Attributes (Error response)
        + message: Wrong request parameter.
        + extra: Parameter limit must be between <1, 100> (string, optional)

+ Response 429 (application/json)

    + Attributes (Error response)
        + message: Too many requests. Please slow down a little and try again later.

# Group Application info

## Aplication version [/app-version/v1/{app_name}]

This entry point is not secured, and is publicly accessible.

+ Parameters
    + app_name: `ulozto-android` (required, string) - Unique application identifier.

### Get version info [GET]

+ Response 200 (application/json)

    + Attributes (Successful response)
        + version (object)
            + internal: 10097 (number, required) - Internal version, should at least loosely follow some kind of semantic versioning (SEMVER)
            + displayed: 1.1 (string, required) - Version number to show to users
        + url: http://uloz.to/path/to/app (string, required) - Url to download last version
        + checksum: 217acf325c6012c1a50828e74626b945 (string, required) - MD5 checksum of the last version

+ Response 404 (application/json)

    Unknown application name (app_name)

    + Attributes (Error response)
        + message: Unknown application.


# Group Error Messages

Returns list of messages translated into language set using `Accept-Language` header. This entry point is not secured, and is publicly accessible.
Accepted languages:
 + cs_CZ
 + sk_SK
 + pl_PL
 + en_US

## File [/v1/files/error-messages]

### Get messages [GET]

+ Request

    + Headers

            Accept-Language: en_US

+ Response 200 (application/json)

    + Attributes (array[Error message])

## Folder [/v1/user/folder/error-messages]

### Get messages [GET]

+ Request

    + Headers

            Accept-Language: en_US

+ Response 200 (application/json)

    + Attributes (array[Error message])

# Data structures

## Public file entity (Private file entity)
## Properties
+ name_sanitized: `Poznávačka ***.pptx` (string, required) - name of the file with bad words replaced

## Private file entity (object)
## Properties
+ id: aYu7nBQ (string, required) - encrypted id of file
+ slug: !ksiXPSXP6 (string, required) - identificator used for other API calls affecting file. Slug may change when file is renamed. Old slug will keep working, but new slug will be issued by API calls.
+ url: `/!ksiXPSXP6/poznavacka-rostlin-pptx` (string, required)
+ realm (enum[string], default, required)
    + Default: ulozto
    + Members
        + ulozto
        + pornfile
+ name: Poznávačka rostlin.pptx (string, required) - name of the file
+ description: `this could potentially be a rather\r\nlong description` (string, optional) - File description
+ description_sanitized: `this could *** *** a rather\r\nlong description` (string, optional) - File description with bad words replaced
+ filesize: 158367932 (number, required) - filesize in bytes
+ extension: pptx (string, required) - file extension
+ is_porn: false (boolean, required)
+ is_porn_by_uploader: false (boolean, required)
+ rating: 0 (number, required) - file rating (sum of thumbs up and thumbs down)
+ password_protected_archive: false (boolean, required) - IF the file is archive, AND that archive is password protected. This file can be downloaded.
+ password_protected_file: false (boolean, required) - You must know correct password to access the file detail or to download this file.
+ `media_info_default_index`: 4 (number, required) - index of first image in slideshow. 0 is the first image from media_info
+ media_info
    + array(object) - key:value array. Key defines size and format of thumbnail, value is a list of images.
+ visibility (enum[string], default, nullable, required)
    + Default: public
    + Members
        + public
        + private
+ malware_status (enum[string], default, nullable, required)
    + Default: unknown
    + Members
        + unknown
        + unwanted
+ content_status (enum[string], default, nullable, required)
    + Default: normal
    + Members
        + normal
        + limited
+ available_for_download: true (boolean, required) - Whether the file is available at our CDN or not.
+ is_searchable: true (boolean, required) - When `false`, file will be hidden form public searchers.
+ expire_download: null (string, nullable, optional) - When not `null`, file is download resticted up to this number.
+ expire_time: `2016-01-01` (string, nullable, optional) - When not `null`, file is download resticted up to this day.
+ upload_date: `2016-01-01` (string, nullable, optional) - File was uploaded on this date.
+ folder_id: 0 (number, required) - ID of folder containing this file. `0` is root folder for every user and only possible folder for anonymous files.
+ content_type (enum[string], default, nullable, required)
    + Default: null
    + Members
        + null
        + video
        + audio
        + image
        + archive
        + document
+ format
    + width: 320 (number, optional) - If available, width of video/image
    + height: 200 (number, optional) - If available, height of video/image
    + duration: 296 (number, optional) - Length of the video/audio in seconds
    + streamable: false (boolean) - `true` for streamable videofile
+ attributes (object, optional)
    + archive_files (array, optional)
    + video_data (array, optional)
    + audio_data (array, optional)

## Update file entity (object)
## Properties
+ name (string, nullable, optional) - Change name of the file. New name must end with same extension as old one (case-sensitive).
+ is_porn: false (boolean, required) - whenever file contains porn or not
+ description (string, nullable, optional) - Change file description. No description by default.
+ visibility (enum[string], default, nullable, optional)
    + Default: public
    + Members
        + public
        + private
+ password: my_password (string, nullable, optional) - Set password protection. No password when null.
+ is_searchable: true (boolean, nullable, optional) - Set to `false` to hide file from public search.
+ expire_download: 100 (number, nullable, optional) - Restrict public access to file by number of downloads remaining. No limit by default.
+ expire_time: `2016-01-01` (string , nullable, optional) - Restrict public access to file by date. No limit by default.
+ folder_id: 0 (number, optional) - Assign file to folder (`0` = root folder, file and folder owner must match).

## Upload file entity (object)
## Properties
+ slug: abcd/asdasd (string, required)
+ visibility (enum[string], default, required)
    + Default: public
    + Members
        + public
        + private
+ is_searchable: false (boolean, required)

## File parameters entity (object)
## Properties
+ id: aYu7nBQ (string, required) - encrypted id of file
+ slug: !ksiXPSXP6 (string, required) - identificator used for other API calls affecting file. Slug may change when file is renamed. Old slug will keep working, but new slug will be issued by API calls.
+ content_type (enum[string], default, nullable, required)
    + Default: null
    + Members
        + null
        + video
        + audio
        + image
        + archive
        + document
+ media_info (object, required)
    + duration: 2547 (number, optional) - video / audio duration in seconds
    + width: 624 (number, optional) - video / image width in pixels
    + height: 352 (number, optional) - video / image height in pixels
    + pixel_aspect: 1 (number, optional)  - pixel aspect ratio
    + video_bitrate: 990074 (number, optional) - video bitrate in kbps
    + video_framerate: 23.976 (number, optional) - framerate in frames per second (FPS)
    + audio_bitrate: 128000 (number, optional) - audio bitrate in kbps
    + audio_channels: 2 (number, optional) - number of audio channels
    + video_format: MPEG-4 Visual (string, optional)
    + video_codec: XviD (string, optional)
    + audio_format: MPEG Audio (string, optional)
    + audio_codec: MPEG-1 Audio layer 3 (string, optional)
    + subtitles (array[string], optional) - list of available subtitles inside container
    + languages (array[string], optional) - list of available languages inside container
+ archive_files (array[Archive Item entity], required)

## Archive Item entity (object)
## Properties
+ name: `Screen Shot 2016-11-11 at 14.47.12.png` (string, required)
+ size: 459328 (number, required) - file size in archive
+ password_protected: false (boolean, required) - whether file is protected by archive password

## Folder entity info (object)
## Properties
+ id: 25792 (number, required) - Folder id (`0` is root folder for each user)
+ name: My very own folder (string, required) - Folder's name. Root folder is always named `root`, you are advised to translate this name to something that suits your application.
+ visibility (enum[string], default, nullable, required)
    + Default: public
    + Members
        + public
        + private
+ public_url: `/soubory/user_name/my-very-own-folder` (string, required) - Url to folder, available only for public folders
+ is_password_protected: true (boolean) - Public folder, other users need to provide password to see contents of this folder.
+ type (enum[string], default, required) - always normal, other types are created after user registration
    + Default: normal
    + Members
        + root
        + gallery
        + normal
        + videoshare
        + favorites
        + documents
        + audios
        + videos
+ parent_folder_id: 0 (number, required) - Parent folder id
+ children (array[Folder entity info]) - Children folders are present when tree format is requested.

## Folder entity size (object)
## Properties
+ id: 25792 (number, required) - Folder id (`0` is root folder for each user)
+ parent_folder_id: 0 (number, required) - Parent folder id
+ children (array[Folder entity size]) - Children folders are present when tree format is requested.
+ files_size: 8340213 (number, required) -
+ files_size_recursive
+ files_count
+ files_count_recursive

## Error response (object)
## Properties
+ result: error (string, required)
+ message: null (string, nullable, required)


## Successful response (object)
## Properties
+ result: ok (string, required)
+ message: null (string, nullable, required)

## Bulk http header item (object)
## Properties
+ name: `Content-Type` (string, required) - HTTP header item name
+ value: `text/javascript; charset=UTF-8` (string, required, nullable) - HTTP header item value

## Bulk request entry (object)
## Properties
+ method: get (enum[string], required)
    + Members
        + get
        + post
        + put
        + delete
        + patch
        + options
+ name: `custom-name` (string, optional) - Optionally every request can be named. The names are then assigned to responses making them easier to navigate.
+ headers (array[Bulk http header item], optional)
+ url: /v1/user (string, required) - Url of entry point
+ body (string, optional) - Body of the request

## Bulk response entry (object)
## Properties
+ code: 200 (number, required) - HTTP response code
+ name: `custom-name` (string, optional) - If request had a name, the name is retained
+ headers (array[Bulk http header item], optional)
+ body: `{inner_payload: ["data1", "data2"]}` (string, optional)

## Error message (object)
## Properties
+ code: 601 (number, required) - Unique error code. You can use this to handle validation errors in your application.
+ message: Valid visibilities are public and private (string, required) - Messsage in language specified by `Accept-Language` header

## Captcha entity (object)
## Properties
+ id: d41d8cd98f00b204e9800998ecf8427e (string, required)
+ type: xapca
+ sound: https://httpbin.org/get?type=sound&data=md5
+ image: https://httpbin.org/get?type=image&data=md5
+ data (object) - This field contains "random" fields which are specific to captcha service.  You have to send them back to /validate endpoint as request body.

## Validate captcha entity (object)
## Properties
+ value: xena (string, required)
+ data (object) - This field contains "random" fields which are specific to captcha service.  You have to send them back to /validate endpoint as request body.

## Captcha token entity (object)
## Properties
+ token: 231de4af3f255e0d6b797327ecc2a7b9 (string, required)

## Download link entity (object)
## Properties
+ hash: 231de4af3f255e0d6b797327ecc2a7b9 (string, required) - md5 hash to verify downloaded file
+ link: https://dla.uloz.to/ (string, required) - download link

## User comment (object)
## Properties
+ author (Comment author) - Author of the comment
+ date: `2017-12-11T14:46:31+01:00` (string, required) - Time the comment was posted
+ message: `lorem ipsum dolor sit amet` (string, required) - Message body containing allowed html tags
+ rating: 1 (number, required) - Comment rating, can be negative

## Comment author (object)
## Properties
+ login: `Johndoe` (string, required) - Login name of the user
+ avatar_url: `https://avatar.uloz.to/u/avatar/j/johndoe.jpg` (string, optional) - Avatar image, if 404 Not found, user does not have avatar - you can still use the image returned though, it is a default "blank" avatar image
+ id: 876234 (number, required)
